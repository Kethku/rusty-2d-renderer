use std::collections::HashMap;

use threemf::mesh::TriangleMesh;
use glam::{vec3, Vec3};
use lazy_static::lazy_static;

use shader::shape_3d::Shape3D;

lazy_static! {
    static ref VERTICES: Vec<Vec3> = vec![
        vec3(0.0, 0.0, 0.0),
        vec3(1.0, 0.0, 0.0),
        vec3(1.0, 1.0, 0.0),
        vec3(0.0, 1.0, 0.0),
        vec3(0.0, 0.0, 1.0),
        vec3(1.0, 0.0, 1.0),
        vec3(1.0, 1.0, 1.0),
        vec3(0.0, 1.0, 1.0),
    ];

    static ref EDGES: Vec<(usize, usize)> = vec![
        (0, 1),
        (1, 2),
        (2, 3),
        (3, 0),
        (4, 5),
        (5, 6),
        (6, 7),
        (7, 4),
        (0, 4),
        (1, 5),
        (2, 6),
        (3, 7),
    ];

    static ref CASES: Vec<Vec<(usize, usize, usize)>> = vec![
        vec![],
        vec![(8, 0, 3)],
        vec![(1, 0, 9)],
        vec![(8, 1, 3), (8, 9, 1)],
        vec![(10, 2, 1)],
        vec![(8, 0, 3), (1, 10, 2)],
        vec![(9, 2, 0), (9, 10, 2)],
        vec![(3, 8, 2), (2, 8, 10), (10, 8, 9)],
        vec![(3, 2, 11)],
        vec![(0, 2, 8), (2, 11, 8)],
        vec![(1, 0, 9), (2, 11, 3)],
        vec![(2, 9, 1), (11, 9, 2), (8, 9, 11)],
        vec![(3, 10, 11), (3, 1, 10)],
        vec![(1, 10, 0), (0, 10, 8), (8, 10, 11)],
        vec![(0, 11, 3), (9, 11, 0), (10, 11, 9)],
        vec![(8, 9, 11), (11, 9, 10)],
        vec![(7, 4, 8)],
        vec![(3, 7, 0), (7, 4, 0)],
        vec![(7, 4, 8), (9, 1, 0)],
        vec![(9, 1, 4), (4, 1, 7), (7, 1, 3)],
        vec![(7, 4, 8), (2, 1, 10)],
        vec![(4, 3, 7), (4, 0, 3), (2, 1, 10)],
        vec![(2, 0, 10), (0, 9, 10), (7, 4, 8)],
        vec![(9, 10, 4), (4, 10, 3), (3, 10, 2), (4, 3, 7)],
        vec![(4, 8, 7), (3, 2, 11)],
        vec![(7, 4, 11), (11, 4, 2), (2, 4, 0)],
        vec![(1, 0, 9), (2, 11, 3), (8, 7, 4)],
        vec![(2, 11, 1), (1, 11, 9), (9, 11, 7), (9, 7, 4)],
        vec![(10, 11, 1), (11, 3, 1), (4, 8, 7)],
        vec![(4, 0, 7), (7, 0, 10), (0, 1, 10), (7, 10, 11)],
        vec![(7, 4, 8), (0, 11, 3), (9, 11, 0), (10, 11, 9)],
        vec![(4, 11, 7), (9, 11, 4), (10, 11, 9)],
        vec![(9, 4, 5)],
        vec![(9, 4, 5), (0, 3, 8)],
        vec![(0, 5, 1), (0, 4, 5)],
        vec![(4, 3, 8), (5, 3, 4), (1, 3, 5)],
        vec![(5, 9, 4), (10, 2, 1)],
        vec![(8, 0, 3), (1, 10, 2), (4, 5, 9)],
        vec![(10, 4, 5), (2, 4, 10), (0, 4, 2)],
        vec![(3, 10, 2), (8, 10, 3), (5, 10, 8), (4, 5, 8)],
        vec![(9, 4, 5), (11, 3, 2)],
        vec![(11, 0, 2), (11, 8, 0), (9, 4, 5)],
        vec![(5, 1, 4), (1, 0, 4), (11, 3, 2)],
        vec![(5, 1, 4), (4, 1, 11), (1, 2, 11), (4, 11, 8)],
        vec![(3, 10, 11), (3, 1, 10), (5, 9, 4)],
        vec![(9, 4, 5), (1, 10, 0), (0, 10, 8), (8, 10, 11)],
        vec![(5, 0, 4), (11, 0, 5), (11, 3, 0), (10, 11, 5)],
        vec![(5, 10, 4), (4, 10, 8), (8, 10, 11)],
        vec![(9, 7, 5), (9, 8, 7)],
        vec![(0, 5, 9), (3, 5, 0), (7, 5, 3)],
        vec![(8, 7, 0), (0, 7, 1), (1, 7, 5)],
        vec![(7, 5, 3), (3, 5, 1)],
        vec![(7, 5, 8), (5, 9, 8), (2, 1, 10)],
        vec![(10, 2, 1), (0, 5, 9), (3, 5, 0), (7, 5, 3)],
        vec![(8, 2, 0), (5, 2, 8), (10, 2, 5), (7, 5, 8)],
        vec![(2, 3, 10), (10, 3, 5), (5, 3, 7)],
        vec![(9, 7, 5), (9, 8, 7), (11, 3, 2)],
        vec![(0, 2, 9), (9, 2, 7), (7, 2, 11), (9, 7, 5)],
        vec![(3, 2, 11), (8, 7, 0), (0, 7, 1), (1, 7, 5)],
        vec![(11, 1, 2), (7, 1, 11), (5, 1, 7)],
        vec![(3, 1, 11), (11, 1, 10), (8, 7, 9), (9, 7, 5)],
        vec![(11, 7, 0), (7, 5, 0), (5, 9, 0), (10, 11, 0), (1, 10, 0)],
        vec![(0, 5, 10), (0, 7, 5), (0, 8, 7), (0, 10, 11), (0, 11, 3)],
        vec![(10, 11, 5), (11, 7, 5)],
        vec![(5, 6, 10)],
        vec![(8, 0, 3), (10, 5, 6)],
        vec![(0, 9, 1), (5, 6, 10)],
        vec![(8, 1, 3), (8, 9, 1), (10, 5, 6)],
        vec![(1, 6, 2), (1, 5, 6)],
        vec![(6, 2, 5), (2, 1, 5), (8, 0, 3)],
        vec![(5, 6, 9), (9, 6, 0), (0, 6, 2)],
        vec![(5, 8, 9), (2, 8, 5), (3, 8, 2), (6, 2, 5)],
        vec![(3, 2, 11), (10, 5, 6)],
        vec![(0, 2, 8), (2, 11, 8), (5, 6, 10)],
        vec![(3, 2, 11), (0, 9, 1), (10, 5, 6)],
        vec![(5, 6, 10), (2, 9, 1), (11, 9, 2), (8, 9, 11)],
        vec![(11, 3, 6), (6, 3, 5), (5, 3, 1)],
        vec![(11, 8, 6), (6, 8, 1), (1, 8, 0), (6, 1, 5)],
        vec![(5, 0, 9), (6, 0, 5), (3, 0, 6), (11, 3, 6)],
        vec![(6, 9, 5), (11, 9, 6), (8, 9, 11)],
        vec![(7, 4, 8), (6, 10, 5)],
        vec![(3, 7, 0), (7, 4, 0), (10, 5, 6)],
        vec![(7, 4, 8), (6, 10, 5), (9, 1, 0)],
        vec![(5, 6, 10), (9, 1, 4), (4, 1, 7), (7, 1, 3)],
        vec![(1, 6, 2), (1, 5, 6), (7, 4, 8)],
        vec![(6, 1, 5), (2, 1, 6), (0, 7, 4), (3, 7, 0)],
        vec![(4, 8, 7), (5, 6, 9), (9, 6, 0), (0, 6, 2)],
        vec![(2, 3, 9), (3, 7, 9), (7, 4, 9), (6, 2, 9), (5, 6, 9)],
        vec![(2, 11, 3), (7, 4, 8), (10, 5, 6)],
        vec![(6, 10, 5), (7, 4, 11), (11, 4, 2), (2, 4, 0)],
        vec![(1, 0, 9), (8, 7, 4), (3, 2, 11), (5, 6, 10)],
        vec![(1, 2, 9), (9, 2, 11), (9, 11, 4), (4, 11, 7), (5, 6, 10)],
        vec![(7, 4, 8), (11, 3, 6), (6, 3, 5), (5, 3, 1)],
        vec![(11, 0, 1), (11, 4, 0), (11, 7, 4), (11, 1, 5), (11, 5, 6)],
        vec![(6, 9, 5), (0, 9, 6), (11, 0, 6), (3, 0, 11), (4, 8, 7)],
        vec![(5, 6, 9), (9, 6, 11), (9, 11, 7), (9, 7, 4)],
        vec![(4, 10, 9), (4, 6, 10)],
        vec![(10, 4, 6), (10, 9, 4), (8, 0, 3)],
        vec![(1, 0, 10), (10, 0, 6), (6, 0, 4)],
        vec![(8, 1, 3), (6, 1, 8), (6, 10, 1), (4, 6, 8)],
        vec![(9, 2, 1), (4, 2, 9), (6, 2, 4)],
        vec![(3, 8, 0), (9, 2, 1), (4, 2, 9), (6, 2, 4)],
        vec![(0, 4, 2), (2, 4, 6)],
        vec![(8, 2, 3), (4, 2, 8), (6, 2, 4)],
        vec![(4, 10, 9), (4, 6, 10), (2, 11, 3)],
        vec![(11, 8, 2), (2, 8, 0), (6, 10, 4), (4, 10, 9)],
        vec![(2, 11, 3), (1, 0, 10), (10, 0, 6), (6, 0, 4)],
        vec![(8, 4, 1), (4, 6, 1), (6, 10, 1), (11, 8, 1), (2, 11, 1)],
        vec![(3, 1, 11), (11, 1, 4), (1, 9, 4), (11, 4, 6)],
        vec![(6, 11, 1), (11, 8, 1), (8, 0, 1), (4, 6, 1), (9, 4, 1)],
        vec![(3, 0, 11), (11, 0, 6), (6, 0, 4)],
        vec![(4, 11, 8), (4, 6, 11)],
        vec![(6, 8, 7), (10, 8, 6), (9, 8, 10)],
        vec![(3, 7, 0), (0, 7, 10), (7, 6, 10), (0, 10, 9)],
        vec![(1, 6, 10), (0, 6, 1), (7, 6, 0), (8, 7, 0)],
        vec![(10, 1, 6), (6, 1, 7), (7, 1, 3)],
        vec![(9, 8, 1), (1, 8, 6), (6, 8, 7), (1, 6, 2)],
        vec![(9, 7, 6), (9, 3, 7), (9, 0, 3), (9, 6, 2), (9, 2, 1)],
        vec![(7, 6, 8), (8, 6, 0), (0, 6, 2)],
        vec![(3, 6, 2), (3, 7, 6)],
        vec![(3, 2, 11), (6, 8, 7), (10, 8, 6), (9, 8, 10)],
        vec![(7, 9, 0), (7, 10, 9), (7, 6, 10), (7, 0, 2), (7, 2, 11)],
        vec![(0, 10, 1), (6, 10, 0), (8, 6, 0), (7, 6, 8), (2, 11, 3)],
        vec![(1, 6, 10), (7, 6, 1), (11, 7, 1), (2, 11, 1)],
        vec![(1, 9, 6), (9, 8, 6), (8, 7, 6), (3, 1, 6), (11, 3, 6)],
        vec![(9, 0, 1), (11, 7, 6)],
        vec![(0, 11, 3), (6, 11, 0), (7, 6, 0), (8, 7, 0)],
        vec![(7, 6, 11)],
        vec![(11, 6, 7)],
        vec![(3, 8, 0), (11, 6, 7)],
        vec![(1, 0, 9), (6, 7, 11)],
        vec![(1, 3, 9), (3, 8, 9), (6, 7, 11)],
        vec![(10, 2, 1), (6, 7, 11)],
        vec![(10, 2, 1), (3, 8, 0), (6, 7, 11)],
        vec![(9, 2, 0), (9, 10, 2), (11, 6, 7)],
        vec![(11, 6, 7), (3, 8, 2), (2, 8, 10), (10, 8, 9)],
        vec![(2, 6, 3), (6, 7, 3)],
        vec![(8, 6, 7), (0, 6, 8), (2, 6, 0)],
        vec![(7, 2, 6), (7, 3, 2), (1, 0, 9)],
        vec![(8, 9, 7), (7, 9, 2), (2, 9, 1), (7, 2, 6)],
        vec![(6, 1, 10), (7, 1, 6), (3, 1, 7)],
        vec![(8, 0, 7), (7, 0, 6), (6, 0, 1), (6, 1, 10)],
        vec![(7, 3, 6), (6, 3, 9), (3, 0, 9), (6, 9, 10)],
        vec![(7, 8, 6), (6, 8, 10), (10, 8, 9)],
        vec![(8, 11, 4), (11, 6, 4)],
        vec![(11, 0, 3), (6, 0, 11), (4, 0, 6)],
        vec![(6, 4, 11), (4, 8, 11), (1, 0, 9)],
        vec![(1, 3, 9), (9, 3, 6), (3, 11, 6), (9, 6, 4)],
        vec![(8, 11, 4), (11, 6, 4), (1, 10, 2)],
        vec![(1, 10, 2), (11, 0, 3), (6, 0, 11), (4, 0, 6)],
        vec![(2, 9, 10), (0, 9, 2), (4, 11, 6), (8, 11, 4)],
        vec![(3, 4, 9), (3, 6, 4), (3, 11, 6), (3, 9, 10), (3, 10, 2)],
        vec![(3, 2, 8), (8, 2, 4), (4, 2, 6)],
        vec![(2, 4, 0), (6, 4, 2)],
        vec![(0, 9, 1), (3, 2, 8), (8, 2, 4), (4, 2, 6)],
        vec![(1, 2, 9), (9, 2, 4), (4, 2, 6)],
        vec![(10, 3, 1), (4, 3, 10), (4, 8, 3), (6, 4, 10)],
        vec![(10, 0, 1), (6, 0, 10), (4, 0, 6)],
        vec![(3, 10, 6), (3, 9, 10), (3, 0, 9), (3, 6, 4), (3, 4, 8)],
        vec![(9, 10, 4), (10, 6, 4)],
        vec![(9, 4, 5), (7, 11, 6)],
        vec![(9, 4, 5), (7, 11, 6), (0, 3, 8)],
        vec![(0, 5, 1), (0, 4, 5), (6, 7, 11)],
        vec![(11, 6, 7), (4, 3, 8), (5, 3, 4), (1, 3, 5)],
        vec![(1, 10, 2), (9, 4, 5), (6, 7, 11)],
        vec![(8, 0, 3), (4, 5, 9), (10, 2, 1), (11, 6, 7)],
        vec![(7, 11, 6), (10, 4, 5), (2, 4, 10), (0, 4, 2)],
        vec![(8, 2, 3), (10, 2, 8), (4, 10, 8), (5, 10, 4), (11, 6, 7)],
        vec![(2, 6, 3), (6, 7, 3), (9, 4, 5)],
        vec![(5, 9, 4), (8, 6, 7), (0, 6, 8), (2, 6, 0)],
        vec![(7, 3, 6), (6, 3, 2), (4, 5, 0), (0, 5, 1)],
        vec![(8, 1, 2), (8, 5, 1), (8, 4, 5), (8, 2, 6), (8, 6, 7)],
        vec![(9, 4, 5), (6, 1, 10), (7, 1, 6), (3, 1, 7)],
        vec![(7, 8, 6), (6, 8, 0), (6, 0, 10), (10, 0, 1), (5, 9, 4)],
        vec![(3, 0, 10), (0, 4, 10), (4, 5, 10), (7, 3, 10), (6, 7, 10)],
        vec![(8, 6, 7), (10, 6, 8), (5, 10, 8), (4, 5, 8)],
        vec![(5, 9, 6), (6, 9, 11), (11, 9, 8)],
        vec![(11, 6, 3), (3, 6, 0), (0, 6, 5), (0, 5, 9)],
        vec![(8, 11, 0), (0, 11, 5), (5, 11, 6), (0, 5, 1)],
        vec![(6, 3, 11), (5, 3, 6), (1, 3, 5)],
        vec![(10, 2, 1), (5, 9, 6), (6, 9, 11), (11, 9, 8)],
        vec![(3, 11, 0), (0, 11, 6), (0, 6, 9), (9, 6, 5), (1, 10, 2)],
        vec![(0, 8, 5), (8, 11, 5), (11, 6, 5), (2, 0, 5), (10, 2, 5)],
        vec![(11, 6, 3), (3, 6, 5), (3, 5, 10), (3, 10, 2)],
        vec![(3, 9, 8), (6, 9, 3), (5, 9, 6), (2, 6, 3)],
        vec![(9, 6, 5), (0, 6, 9), (2, 6, 0)],
        vec![(6, 5, 8), (5, 1, 8), (1, 0, 8), (2, 6, 8), (3, 2, 8)],
        vec![(2, 6, 1), (6, 5, 1)],
        vec![(6, 8, 3), (6, 9, 8), (6, 5, 9), (6, 3, 1), (6, 1, 10)],
        vec![(1, 10, 0), (0, 10, 6), (0, 6, 5), (0, 5, 9)],
        vec![(3, 0, 8), (6, 5, 10)],
        vec![(10, 6, 5)],
        vec![(5, 11, 10), (5, 7, 11)],
        vec![(5, 11, 10), (5, 7, 11), (3, 8, 0)],
        vec![(11, 10, 7), (10, 5, 7), (0, 9, 1)],
        vec![(5, 7, 10), (10, 7, 11), (9, 1, 8), (8, 1, 3)],
        vec![(2, 1, 11), (11, 1, 7), (7, 1, 5)],
        vec![(3, 8, 0), (2, 1, 11), (11, 1, 7), (7, 1, 5)],
        vec![(2, 0, 11), (11, 0, 5), (5, 0, 9), (11, 5, 7)],
        vec![(2, 9, 5), (2, 8, 9), (2, 3, 8), (2, 5, 7), (2, 7, 11)],
        vec![(10, 3, 2), (5, 3, 10), (7, 3, 5)],
        vec![(10, 0, 2), (7, 0, 10), (8, 0, 7), (5, 7, 10)],
        vec![(0, 9, 1), (10, 3, 2), (5, 3, 10), (7, 3, 5)],
        vec![(7, 8, 2), (8, 9, 2), (9, 1, 2), (5, 7, 2), (10, 5, 2)],
        vec![(3, 1, 7), (7, 1, 5)],
        vec![(0, 7, 8), (1, 7, 0), (5, 7, 1)],
        vec![(9, 5, 0), (0, 5, 3), (3, 5, 7)],
        vec![(5, 7, 9), (7, 8, 9)],
        vec![(4, 10, 5), (8, 10, 4), (11, 10, 8)],
        vec![(3, 4, 0), (10, 4, 3), (10, 5, 4), (11, 10, 3)],
        vec![(1, 0, 9), (4, 10, 5), (8, 10, 4), (11, 10, 8)],
        vec![(4, 3, 11), (4, 1, 3), (4, 9, 1), (4, 11, 10), (4, 10, 5)],
        vec![(1, 5, 2), (2, 5, 8), (5, 4, 8), (2, 8, 11)],
        vec![(5, 4, 11), (4, 0, 11), (0, 3, 11), (1, 5, 11), (2, 1, 11)],
        vec![(5, 11, 2), (5, 8, 11), (5, 4, 8), (5, 2, 0), (5, 0, 9)],
        vec![(5, 4, 9), (2, 3, 11)],
        vec![(3, 4, 8), (2, 4, 3), (5, 4, 2), (10, 5, 2)],
        vec![(5, 4, 10), (10, 4, 2), (2, 4, 0)],
        vec![(2, 8, 3), (4, 8, 2), (10, 4, 2), (5, 4, 10), (0, 9, 1)],
        vec![(4, 10, 5), (2, 10, 4), (1, 2, 4), (9, 1, 4)],
        vec![(8, 3, 4), (4, 3, 5), (5, 3, 1)],
        vec![(1, 5, 0), (5, 4, 0)],
        vec![(5, 0, 9), (3, 0, 5), (8, 3, 5), (4, 8, 5)],
        vec![(5, 4, 9)],
        vec![(7, 11, 4), (4, 11, 9), (9, 11, 10)],
        vec![(8, 0, 3), (7, 11, 4), (4, 11, 9), (9, 11, 10)],
        vec![(0, 4, 1), (1, 4, 11), (4, 7, 11), (1, 11, 10)],
        vec![(10, 1, 4), (1, 3, 4), (3, 8, 4), (11, 10, 4), (7, 11, 4)],
        vec![(9, 4, 1), (1, 4, 2), (2, 4, 7), (2, 7, 11)],
        vec![(1, 9, 2), (2, 9, 4), (2, 4, 11), (11, 4, 7), (3, 8, 0)],
        vec![(11, 4, 7), (2, 4, 11), (0, 4, 2)],
        vec![(7, 11, 4), (4, 11, 2), (4, 2, 3), (4, 3, 8)],
        vec![(10, 9, 2), (2, 9, 7), (7, 9, 4), (2, 7, 3)],
        vec![(2, 10, 7), (10, 9, 7), (9, 4, 7), (0, 2, 7), (8, 0, 7)],
        vec![(10, 4, 7), (10, 0, 4), (10, 1, 0), (10, 7, 3), (10, 3, 2)],
        vec![(8, 4, 7), (10, 1, 2)],
        vec![(4, 1, 9), (7, 1, 4), (3, 1, 7)],
        vec![(8, 0, 7), (7, 0, 1), (7, 1, 9), (7, 9, 4)],
        vec![(0, 7, 3), (0, 4, 7)],
        vec![(8, 4, 7)],
        vec![(9, 8, 10), (10, 8, 11)],
        vec![(3, 11, 0), (0, 11, 9), (9, 11, 10)],
        vec![(0, 10, 1), (8, 10, 0), (11, 10, 8)],
        vec![(11, 10, 3), (10, 1, 3)],
        vec![(1, 9, 2), (2, 9, 11), (11, 9, 8)],
        vec![(9, 2, 1), (11, 2, 9), (3, 11, 9), (0, 3, 9)],
        vec![(8, 2, 0), (8, 11, 2)],
        vec![(11, 2, 3)],
        vec![(2, 8, 3), (10, 8, 2), (9, 8, 10)],
        vec![(0, 2, 9), (2, 10, 9)],
        vec![(3, 2, 8), (8, 2, 10), (8, 10, 1), (8, 1, 0)],
        vec![(1, 2, 10)],
        vec![(3, 1, 8), (1, 9, 8)],
        vec![(9, 0, 1)],
        vec![(3, 0, 8)],
        vec![]
    ];
}

// Returns the interpolated vertex in the middle of the specified edge.
fn edge_to_boundary_vertex(position: Vec3, cell_size: f32, edge_index: usize, samples: &Vec<f32>) -> Vec3 {
    let (vertex_0_index, vertex_1_index) = EDGES[edge_index];
    let sample_0 = samples[vertex_0_index];
    let sample_1 = samples[vertex_1_index];
    let t0 = 1.0 - (0.0 - sample_0) / (sample_1 - sample_0);
    let t1 = 1.0 - t0;
    let vertex_0_position = VERTICES[vertex_0_index];
    let vertex_1_position = VERTICES[vertex_1_index];
    position + (vertex_0_position * t0 + vertex_1_position * t1) * cell_size
}

fn marching_cubes_single_cell(shape: impl Shape3D, position: Vec3, cell_size: f32, mesh: &mut TriangleMesh) {
    // Evaluate the field on each vertex of the cube
    let mut samples = vec![0.0; 8];
    for i in 0..8 {
        samples[i] = shape.distance(position + VERTICES[i] * cell_size);
    }

    // Figure out the index for which case this is
    let mut case = 0;
    for i in 0..8 {
        if samples[i] < 0.0 {
            case += 2_usize.pow(i as u32)
        }
    }

    // Lookup which faces are needed
    let faces = &CASES[case];

    for face in faces {
        let next_index = mesh.vertices.len();
        let (vertex_0_index, vertex_1_index, vertex_2_index) = face;
        mesh.vertices.push(edge_to_boundary_vertex(position, cell_size, *vertex_0_index, &samples).into());
        mesh.vertices.push(edge_to_boundary_vertex(position, cell_size, *vertex_1_index, &samples).into());
        mesh.vertices.push(edge_to_boundary_vertex(position, cell_size, *vertex_2_index, &samples).into());
        mesh.triangles.push([next_index, next_index + 1, next_index + 2]);
    }
}

pub fn marching_cubes(shape: impl Shape3D, model_size: f32, cell_size: f32) -> TriangleMesh {
    let mut mesh = TriangleMesh {
        vertices: Vec::new(),
        triangles: Vec::new(),
    };
    let model_radius = model_size / 2.0;
    let mut x = -model_radius;
    while x <= model_radius {
        println!("{:.2}%", ((x + model_radius) / model_size) * 100.0);
        let mut y = -model_radius;
        while y <= model_radius {
            let mut z = -model_radius;
            while z <= model_radius {
                marching_cubes_single_cell(shape, Vec3::new(x, y, z), cell_size, &mut mesh);
                z += cell_size;
            }
            y += cell_size;
        }
        x += cell_size;
    }
    mesh
}
