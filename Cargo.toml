[package]
name = "rusty_marcher"
version = "0.1.0"
edition = "2018"

# Required for wgpu to pick the correct graphics backend (vulkan vs metal vs directx)
resolver = "2"

[dependencies]
bytemuck = { version = "1.13.1", features = ["derive"] }
cgmath = "0.18"
env_logger = "0.8" # Enables writing logs out to file
futures = "0.3" # Futures required to initialize async wgpu types
glam = "0.22.0" # Math library with nostd
image = "0.23"
lazy_static = "1.4.0" # Lazy static initialization
log = "0.4"
rust-embed = "5.9.0"
shader = { path = "./shader" } # The actual shader which is compiled to spirv and used to interact with the scene
threemf = "0.1.0" # 3MF file format
wgpu = { git = "https://github.com/gfx-rs/wgpu", features = ["spirv"] }
winit = "0.28.3" # Window library for constructing a window and handling window events
chrono = "0.4.4" # Chrono library for time management

[target.'cfg(not(target_arch = "spirv"))'.dependencies]
bevy_reflect = "0.5.0" # Library for dynamically accessing struct fields

[build-dependencies]
# Build script which compiles the shader to spirv
spirv-builder = { git = "https://github.com/EmbarkStudios/rust-gpu", package = "spirv-builder" }
